---
name: "Stable build"

# on: [push]

on:
  push:
  create:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64-Linux
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            arch: x86_64-Darwin
            target: x86_64-apple-darwin
          - os: macos-latest
            arch: arm64-Darwin
            target: aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target=${{ matrix.target }}

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-${{matrix.target}}
          path: ${{  github.workspace  }}/target/${{ matrix.target }}/release/gum

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
      
      - name: Set version variable
        run: echo "GUM_VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name:  Rename release to avoid name conflict
        run: ./scripts/rename_releases.sh
      
      - run: ls release
      # - name: Release
      # uses: softprops/action-gh-release@v1
      # if: startsWith(github.ref, 'refs/tags/')
      # with:
      # files: |
      # REAMDE.md
      # Cargo.toml
      # env:
      # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # with:
      # upload_url: ${{ steps.create_release.outputs.upload_url }}
      # asset_path: ./my-artifact.zip
      # asset_name: my-artifact.zip
      # asset_content_type: application/zip
    # - uses: actions/upload-release-asset@v1.0.1
#
# - uses: eregon/publish-release@v1
# env:
# GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# with:
# release_id: ${{ steps.create_release.outputs.id }}
